// package singleton

// import (
// 	"fmt"
// )

// var lock = &sync.Mutex{}

// type singletonUsingSyncMutex struct{}

// var instanceUsingSyncMutex *singletonUsingSyncMutex

// func GetInstanceUsingSyncMutex() *singletonUsingSyncMutex {
// 	if instanceUsingSyncMutex == nil {
// 		lock.Lock()
// 		defer lock.Unlock()

// 		if instanceUsingSyncMutex == nil {
// 			fmt.Println("Creating single instance now")
// 			instanceUsingSyncMutex = &single{}
// 		} else {
// 			fmt.Println("Single instance already created")
// 		}
// 	} else {
// 		fmt.Println("Single instance already created")
// 	}

// 	return instanceUsingSyncMutex
// }
